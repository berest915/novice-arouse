{"version":3,"sources":["img/portfolio.png","img/ws-info-clone.png","coms/ProjectList/Cards.js","img/woocel.png","css-constants/css-constants.jsx","coms/ProjectList/ProjectListStyles.jsx","context/fontContext.js","coms/ProjectList/Card.js","coms/ProjectList/ProjectList.js","coms/TechStack/TechStackStyles.jsx","coms/TechStack/TechStack.js","coms/TechStack/TechStackProps.js","coms/LogoText/LogoText.js","coms/HeaderLinks/HeaderLinksStyles.jsx","pdf/resume.pdf","coms/HeaderLinks/HeaderLinks.js","coms/MainMessage/MainMessageStyles.jsx","coms/MainMessage/MainMessage.js","img/cover-img-min.jpg","coms/CoverImage/CoverImage.js","coms/ContactUs/ContactUsStyles.jsx","coms/ContactUs/ContactUs.js","coms/Banner/Banner.js","coms/NotExist/NotExist.js","context/types.js","context/fontReducer.js","context/FontState.js","App.js","i18n.jsx","reportWebVitals.js","coms/Loading/Loading.js","index.js"],"names":["Cards","image","portfolio","alt","title","p","stack","demoUrl","sourceUrl","isRowReverse","wsInfoClone","GFont_JetBrains_Mono_500_800","css","GFont_Cabin_600","GFont_MaShanZheng","leftBoxShadow","rightBoxShadow","Wrapper","styled","div","props","ImageDiv","ContentDiv","currentLanguage","fontContext","createContext","Card","card","t","useTranslation","useContext","className","data-aos","data-aos-easing","src","data-aos-duration","target","href","rel","ProjectList","map","TechStack","techStackProps","index","StackIcon","stackName","currentTechStackProps","ReactLogo","StyledComponents","Firebase","MaterialUi","Github","furtherTechStackProps","Typescript","NodeJs","Mongodb","Amazonaws","Auth0","LogoText","setCurrentLanguage","switchLanguage","lang","i18next","changeLanguage","Button","onClick","HeaderLinks","useEffect","localStorage","getItem","resume","MainMessage","CoverImage","coverImg","nameErrorBorder","emailErrorBorder","messageErrorBorder","captionColor","ContactUs","useState","from_name","from_email","from_message","input","setInput","setNameErrorBorder","setEmailErrorBorder","setMessageErrorBorder","setCaptionColor","captionText","setCaptionText","recaptchaIsClicked","setRecaptchaIsClicked","handleOnChange","e","name","value","onSubmit","preventDefault","emailjs","sendForm","process","then","result","console","log","text","error","type","placeholder","onChange","sitekey","info","Banner","NotExist","history","useHistory","Container","push","variant","color","SET_CURRENT_LANGUAGE","fontReducer","state","action","payload","Error","FontState","useReducer","FontReducer","dispatch","Provider","children","App","exact","path","component","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","Box","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.6156dc93.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/portfolio.cb50d096.png\";","export default __webpack_public_path__ + \"static/media/ws-info-clone.cb840fd5.png\";","import portfolio from '../../img/portfolio.png';\r\nimport wsInfoClone from '../../img/ws-info-clone.png';\r\nimport woocel from '../../img/woocel.png';\r\n\r\nexport const Cards = [\r\n  {\r\n    image: portfolio,\r\n    alt: 'portfolio',\r\n    title: 'Portfolio',\r\n    p: `[P1] So the, I'm a self-taught frontend developer and very likely with the insufficient professional development experience. Thus I do believe a clean & decent looking of portfolio would help me on seeking greater chance to be hired by those great companies out there. As my main focus on ReactJS, this site is built using ReactJS and Styled-Components.`,\r\n    stack: '# React # Material-Ui # Styled-Components # Github',\r\n    demoUrl: 'https://berest915.github.io/novice-arouse/',\r\n    sourceUrl: 'https://github.com/berest915/novice-arouse/',\r\n    isRowReverse: false,\r\n  },\r\n  {\r\n    image: woocel,\r\n    alt: 'woocel',\r\n    title: 'woocel',\r\n    p: `[P2] This project is meant to build a WhatsApp-alike chatroom. The major difference comparing the actual web-whatsApp is, Woocel behaves as a shared-data chatroom for all user signing in using their Google account. This site is using firebase auth feature to log in while localStorage token to keep user logging in. Any chatroom & its messages are stored into firebase. For anyone who tried to login with different Google account, you might wanna add some other google account onto the browser you're using.`,\r\n    stack: '# React # Firebase # Material-Ui # Styled-Components # Github',\r\n    demoUrl: 'https://woocel-v0.firebaseapp.com/',\r\n    sourceUrl: 'https://github.com/berest915/woocel/',\r\n    isRowReverse: true,\r\n  },\r\n  {\r\n    image: wsInfoClone,\r\n    alt: 'whatsapp-info-clone',\r\n    title: 'whatsapp-info-clone',\r\n    p: `[P3] I figured that if I attempt to make a clone of web-whatsApp, I might as well, clone the information site of whatsApp ( at least ui alike ). This site's element-styles are mostly refer to https://www.whatsapp.com/ while the links are taken into. Main difference would be one navigation named \"WSChat Web\", it would direct you to the previous project being mentioned, which is https://woocel-v0.web.app/ .`,\r\n    stack: '# React # Styled-Components # Github',\r\n    demoUrl: 'https://berest915.github.io/wsc/',\r\n    sourceUrl: 'https://github.com/berest915/wsc/',\r\n    isRowReverse: false,\r\n  },\r\n];","export default __webpack_public_path__ + \"static/media/woocel.282393bd.png\";","import { css } from \"styled-components\";\r\n\r\nexport const GFont_JetBrains_Mono_500_800 = css`\r\n  font-family: \"JetBrains Mono\", monospace;\r\n`;\r\n\r\nexport const GFont_Cabin_600 = css`\r\n  font-family: \"cabin\", \"san-serif\";\r\n`;\r\n\r\nexport const GFont_MaShanZheng = css`\r\n  font-family: \"Ma Shan Zheng\", cursive;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { GFont_MaShanZheng } from \"../../css-constants/css-constants\";\r\n// css\r\nconst leftBoxShadow = css`\r\n  -webkit-box-shadow: -12px -4px 36px -8px rgba(112, 100, 112, 0.55);\r\n  -moz-box-shadow: -12px -4px 36px -8px rgba(112, 100, 112, 0.55);\r\n  box-shadow: -12px -4px 36px -8px rgba(112, 100, 112, 0.55);\r\n`;\r\n\r\nconst rightBoxShadow = css`\r\n  -webkit-box-shadow: 12px 4px 36px -8px rgba(112, 100, 112, 0.55);\r\n  -moz-box-shadow: 12px 4px 36px -8px rgba(112, 100, 112, 0.55);\r\n  box-shadow: 12px 4px 36px -8px rgba(112, 100, 112, 0.55);\r\n`;\r\n\r\n// styled\r\nexport const Wrapper = styled.div`\r\n  padding: 2rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  ${props => props.isRowReverse && \"flex-direction: row-reverse\"};\r\n\r\n  .mainTitle {\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    margin-bottom: 3rem;\r\n  }\r\n\r\n  .each-w {\r\n    width: 48%;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    flex-direction: column;\r\n    transition: all 0.4 ease;\r\n\r\n    .each-w {\r\n      width: 86%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ImageDiv = styled.div`\r\n  ${props => (props.isRowReverse === false ? leftBoxShadow : rightBoxShadow)}\r\n\r\n  img {\r\n    width: 100%;\r\n    border-radius: 8px;\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    ${leftBoxShadow};\r\n  }\r\n`;\r\n\r\nexport const ContentDiv = styled.div`\r\n  font-family: Roboto \"san-serif\";\r\n  font-weight: 500;\r\n  text-align: justify;\r\n  .title {\r\n    font-size: 1.4rem;\r\n    font-weight: bold;\r\n    margin: 1rem 0;\r\n    text-transform: uppercase;\r\n    transition: font-size 0.4s ease;\r\n  }\r\n\r\n  .stack {\r\n    margin: 1rem 0;\r\n    text-transform: capitalize;\r\n    letter-spacing: 1px;\r\n    color: rgba(80, 80, 110, 0.8);\r\n  }\r\n\r\n  .card-link {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 80%;\r\n    transition: width 0.4s ease;\r\n    ${props => props.currentLanguage === \"chi\" && GFont_MaShanZheng}\r\n\r\n    a {\r\n      color: #436eb1;\r\n      text-decoration: none;\r\n      transition: all 0.4s ease;\r\n      padding: 8px 12px;\r\n      .link-icon {\r\n        margin-right: 8px;\r\n      }\r\n      :hover {\r\n        background-color: #59619b;\r\n        color: #c2dfff;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 570px) {\r\n    .card-link {\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 460px) {\r\n    .title {\r\n      transition: font-size 0.4s ease;\r\n      font-size: 1.2rem;\r\n      text-align: center;\r\n    }\r\n\r\n    .card-link {\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 390px) {\r\n    .title {\r\n      font-size: 1rem;\r\n    }\r\n\r\n    .description {\r\n      display: none;\r\n    }\r\n\r\n    .card-link {\r\n      flex-direction: column;\r\n      text-align: center;\r\n\r\n      a {\r\n        margin: 0.5rem 0;\r\n        padding: 0.5rem 1rem;\r\n        border: 1px solid silver;\r\n\r\n        :hover {\r\n          transition: all 0.4s ease;\r\n          background-color: #59619b;\r\n          color: #c2dfff;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { createContext } from 'react'\r\n\r\nconst fontContext = createContext()\r\nexport default fontContext","import React, { useContext } from \"react\";\r\nimport { Wrapper, ImageDiv, ContentDiv } from \"./ProjectListStyles\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport fontContext from \"../../context/fontContext\"\r\nconst Card = ({ card }) => {\r\n  const { t } = useTranslation()\r\n  const {currentLanguage} = useContext(fontContext)\r\n\r\n  const {\r\n    image,\r\n    alt,\r\n    title,\r\n    p,\r\n    stack,\r\n    demoUrl,\r\n    sourceUrl,\r\n    isRowReverse,\r\n  } = card;\r\n\r\n  return (\r\n    <Wrapper isRowReverse={isRowReverse} >\r\n      <ImageDiv\r\n        className=\"each-w\"\r\n        isRowReverse={isRowReverse}\r\n        data-aos={isRowReverse ? `fade-left` : `fade-right`}\r\n        data-aos-easing=\"ease-in-cubic\"\r\n      >\r\n        <img src={image} alt={alt} />\r\n      </ImageDiv>\r\n\r\n      <ContentDiv className=\"each-w \" data-aos=\"zoom-in-down\"\r\n        data-aos-duration=\"700\"\r\n        currentLanguage={currentLanguage}\r\n      >\r\n        <p className=\"title\">{title}</p>\r\n        <p className=\"description\">{p}</p>\r\n        <h4 className=\"stack\">{stack}</h4>\r\n        <div className=\"card-link\">\r\n          <a target=\"_blank\" href={demoUrl} rel=\"noopener noreferrer\">\r\n            <i className=\"link-icon fas fa-desktop\" />\r\n            <span>{t(\"projectList.demo\")}</span>\r\n          </a>\r\n          <a target=\"_blank\" href={sourceUrl} rel=\"noopener noreferrer\">\r\n            <i className=\"link-icon fab fa-github\" />\r\n            <span>{t(\"projectList.source\")}</span>\r\n          </a>\r\n        </div>\r\n      </ContentDiv>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Cards } from \"./Cards\";\r\nimport Card from \"./Card\";\r\n\r\nconst ProjectList = () => {\r\n  return (\r\n    <>\r\n      {Cards.map(card => (\r\n        <Card key={card.title} card={card} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import styled from \"styled-components\";\r\nimport { GFont_Cabin_600 } from \"../../css-constants/css-constants\";\r\n\r\nexport const Wrapper = styled.div`\r\n  margin: 6rem auto;\r\n  width: 100%;\r\n  max-width: 1100px;\r\n  text-align: center;\r\n  transition: all 0.4s ease;\r\n  display: flex;\r\n  flex-direction: column;\r\n  ${GFont_Cabin_600};\r\n  .title {\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    margin-bottom: 3rem;\r\n  }\r\n\r\n  .stacks {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    .stack {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      margin: 20px 40px;\r\n\r\n      .styled-icons {\r\n        height: 5rem;\r\n        margin-bottom: 1rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    margin: 4rem 0;\r\n    transition: all 0.4s ease;\r\n    .title {\r\n      margin-bottom: 2rem;\r\n    }\r\n    .stacks > .stack {\r\n      padding: 0;\r\n      width: 40%;\r\n      height: 100%;\r\n      margin: 10px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    .title {\r\n      font-size: 1.5rem;\r\n      transition: all 0.4s ease;\r\n    }\r\n    .stacks > .stack {\r\n      width: 80%;\r\n      border-bottom: 1px solid silver;\r\n\r\n      span {\r\n        margin-bottom: 1.5rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 380px) {\r\n    width: 100%;\r\n    .title {\r\n      font-size: 1.2rem;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Wrapper } from \"./TechStackStyles\";\r\n\r\nconst TechStack = ({ title, techStackProps }) => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <p className=\"title\">{title}</p>\r\n        <div className=\"stacks\">\r\n          {techStackProps.map((stack, index) => (\r\n            <p className=\"stack\" key={index}>\r\n              <stack.StackIcon className=\"styled-icons\" />\r\n              <span>{stack.stackName}</span>\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TechStack;\r\n","import {\r\n  StyledComponents,\r\n  ReactLogo,\r\n  Firebase,\r\n  Github,\r\n  Mongodb,\r\n  Auth0,\r\n  Amazonaws,\r\n  Typescript,\r\n  MaterialUi,\r\n} from \"@styled-icons/simple-icons\";\r\nimport { NodeJs } from \"@styled-icons/fa-brands\";\r\n\r\nexport const currentTechStackProps = [\r\n  {\r\n    StackIcon: ReactLogo,\r\n    stackName: \"ReactJS\",\r\n  },\r\n  {\r\n    StackIcon: StyledComponents,\r\n    stackName: \"Styled-Components\",\r\n  },\r\n  {\r\n    StackIcon: Firebase,\r\n    stackName: \"Firebase\",\r\n  },\r\n  {\r\n    StackIcon: MaterialUi,\r\n    stackName: \"Material-Ui\",\r\n  },\r\n  {\r\n    StackIcon: Github,\r\n    stackName: \"Github\",\r\n  },\r\n];\r\n\r\nexport const furtherTechStackProps = [\r\n  {\r\n    StackIcon: Typescript,\r\n    stackName: \"TypeScript\",\r\n  },\r\n  {\r\n    StackIcon: NodeJs,\r\n    stackName: \"NodeJS (ExpressJS)\",\r\n  },\r\n  {\r\n    StackIcon: Mongodb,\r\n    stackName: \"Mongodb\",\r\n  },\r\n  {\r\n    StackIcon: ReactLogo,\r\n    stackName: \"React Native\",\r\n  },\r\n  {\r\n    StackIcon: Amazonaws,\r\n    stackName: \"AWS\",\r\n  },\r\n  {\r\n    StackIcon: Auth0,\r\n    stackName: \"Auth0\",\r\n  },\r\n];\r\n","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GFont_JetBrains_Mono_500_800 } from \"../../css-constants/css-constants\";\r\nimport i18next from \"i18next\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport fontContext from \"../../context/fontContext\"\r\n\r\nconst LogoText = () => {\r\n  const { t } = useTranslation();\r\n  const { setCurrentLanguage } = useContext(fontContext)\r\n\r\n  const switchLanguage = (lang) => {\r\n    i18next.changeLanguage(lang)\r\n    setCurrentLanguage(lang)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <div className=\"logo-text\">\r\n          <p>SAn</p>\r\n          <p>LEOW</p>\r\n        </div>\r\n        <div className=\"lang-btn\">\r\n          <Button onClick={() => switchLanguage('en')}>\r\n            {t(\"english\")}\r\n          </Button>\r\n          <Button onClick={() => switchLanguage('chi')}>\r\n            {t(\"chinese\")}\r\n          </Button>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogoText;\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 3rem;\r\n  .logo-text {\r\n    display: inline-block;\r\n    ${GFont_JetBrains_Mono_500_800};\r\n    font-weight: 800;\r\n    width: 50%;\r\n    color: var(--LogoText-font-color);\r\n  }\r\n\r\n  .lang-btn {\r\n    display: inline-block;\r\n    width: 50%;\r\n    text-align: right;\r\n    .MuiButton-root {\r\n      \r\n      ${GFont_JetBrains_Mono_500_800};\r\n      font-weight: 800;\r\n      :hover {\r\n        background-color: #AEBBD6;\r\n      transition: all .3s ease;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { GFont_MaShanZheng } from \"../../css-constants/css-constants\";\r\n\r\nexport const Wrapper = styled.div`\r\n  .dir {\r\n    height: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .border {\r\n      width: 25%;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.7);\r\n      transition: all 0.4s ease;\r\n    }\r\n\r\n    .items {\r\n      display: flex;\r\n\r\n      .item {\r\n        letter-spacing: 1px;\r\n        margin-left: 3rem;\r\n        font-weight: 500;\r\n        .item__link {\r\n          text-decoration: none;\r\n          font-size: 1.1rem;\r\n          color: #53628d;\r\n          display: inline-flex;\r\n          align-items: center;\r\n\r\n          :hover {\r\n            color: #1e3f48;\r\n            transform: scale(1.05);\r\n            transition: all 0.4s ease;\r\n          }\r\n          .item__text {\r\n            ${props => props.currentLanguage === \"chi\" && GFont_MaShanZheng}\r\n            ${props => props.currentLanguage === \"chi\" && `font-weight: 600`}\r\n          }\r\n        }\r\n\r\n        .item__icon {\r\n          padding-right: 6px;\r\n          font-size: 1.5rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    .dir {\r\n      height: 100%;\r\n      .border {\r\n        width: 30%;\r\n        transition: all 0.4s ease;\r\n      }\r\n      .items > .item {\r\n        padding-left: 1.5rem;\r\n\r\n        .item__link {\r\n          font-size: 0.9rem;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    .dir {\r\n      .border {\r\n        width: 20%;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 550px) {\r\n    .dir {\r\n      .border {\r\n        width: 10%;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 460px) {\r\n    .dir {\r\n      .border {\r\n        width: 0;\r\n      }\r\n\r\n      .items {\r\n        flex-direction: column;\r\n        width: 100%;\r\n\r\n        .item {\r\n          padding: 0;\r\n          margin: 0;\r\n          .item__link {\r\n            padding: 10px 30px;\r\n            border: 1px solid #59619b;\r\n            width: 100%;\r\n            margin: 8px auto;\r\n            display: flex;\r\n\r\n            :hover {\r\n              transition: all 0.4s ease;\r\n              background-color: #59619b;\r\n              color: #c2dfff;\r\n            }\r\n\r\n            .item__icon {\r\n              flex: 1;\r\n              padding: 0 25px;\r\n\r\n              :hover {\r\n                color: #c2dfff;\r\n              }\r\n            }\r\n\r\n            .item__text {\r\n              flex: 3;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/resume.67d5b362.pdf\";","import React, { useContext, useEffect } from \"react\";\r\nimport { Wrapper } from \"./HeaderLinksStyles\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport fontContext from \"../../context/fontContext\";\r\nimport resume from \"../../pdf/resume.pdf\"\r\n\r\nconst HeaderLinks = () => {\r\n  const { t } = useTranslation();\r\n  const { currentLanguage, setCurrentLanguage } = useContext(fontContext);\r\n\r\n  useEffect(() => {\r\n    // default LST key from i18next\r\n    const LST = localStorage.getItem(\"i18nextLng\");\r\n    LST === \"chi\" && setCurrentLanguage(\"chi\");\r\n\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Wrapper currentLanguage={currentLanguage}>\r\n        <div className=\"dir\">\r\n          <div className=\"border\" />\r\n          <div className=\"items\">\r\n            <div className=\"item\">\r\n              <a\r\n                href=\"https://github.com/berest915\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"item__link\"\r\n              >\r\n                <i className=\"item__icon fab fa-github\" />\r\n                <span className=\"item__text\">{t(\"repo\")}</span>\r\n              </a>\r\n            </div>\r\n            <div className=\"item\">\r\n              <a\r\n                href={resume}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className=\"item__link\"\r\n              >\r\n                <i className=\"item__icon far fa-file-pdf\" />\r\n                <span className=\"item__text\">{t(\"resume\")}</span>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderLinks;\r\n","import styled from \"styled-components\";\r\nimport {\r\n  GFont_Cabin_600,\r\n  GFont_MaShanZheng,\r\n} from \"../../css-constants/css-constants\";\r\n\r\nexport const Wrapper = styled.div`\r\n  transition: all 0.4s ease;\r\n  .msg {\r\n    padding: 5%;\r\n    transition: all 0.4s ease;\r\n    ${GFont_Cabin_600};\r\n    font-size: 3rem;\r\n    line-height: 3rem;\r\n    letter-spacing: 2px;\r\n\r\n    p {\r\n      margin-bottom: 0.7rem;\r\n\r\n      span {\r\n        letter-spacing: 1px;\r\n        color: rgba(80, 80, 110, 0.7);\r\n      }\r\n    }\r\n  }\r\n\r\n  .chi-lang {\r\n    ${GFont_MaShanZheng};\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    .msg {\r\n      font-size: 2.3rem;\r\n      line-height: 2.3rem;\r\n      transition: all 0.4s ease;\r\n      p {\r\n        margin-bottom: 0.5rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    .msg {\r\n      font-size: 1.7rem;\r\n      line-height: 1.7rem;\r\n      transition: all 0.4s ease;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    .msg {\r\n      font-size: 1.3rem;\r\n      letter-spacing: 3px;\r\n      padding: 5% 3%;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 450px) {\r\n    .msg {\r\n      padding: 2rem 5%;\r\n      font-size: 1.1rem;\r\n      p {\r\n        margin-bottom: 0;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { Wrapper } from \"./MainMessageStyles\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport fontContext from \"../../context/fontContext\"\r\nconst MainMessage = () => {\r\n  const { t } = useTranslation();\r\n  const { currentLanguage } = useContext(fontContext)\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <div className={`msg ${currentLanguage === 'chi' && `chi-lang`}`}>\r\n          <p>\r\n            {t(\"mainMessage.1\")}\r\n            <span>{t(\"mainMessage.2\")}</span>\r\n          </p>\r\n          <p>\r\n            <span>{t(\"mainMessage.3\")}</span>\r\n            {t(\"mainMessage.4\")}\r\n          </p>\r\n          <p>\r\n            {t(\"mainMessage.5\")}\r\n            <span>{t(\"mainMessage.6\")}</span>\r\n          </p>\r\n        </div>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainMessage;\r\n","export default __webpack_public_path__ + \"static/media/cover-img-min.b1de8bc9.jpg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport coverImg from \"../../img/cover-img-min.jpg\";\r\n\r\nconst CoverImage = () => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <img src={coverImg} alt='cover' className=\"cover__img\" />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CoverImage;\r\n\r\nconst Wrapper = styled.div`\r\n  .cover__img {\r\n    width: 100%;\r\n    height: auto;\r\n    border-radius: 5px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport {\r\n  GFont_Cabin_600,\r\n  GFont_MaShanZheng,\r\n} from \"../../css-constants/css-constants\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background-color: rgba(194, 223, 255, 0.2);\r\n  padding: 50px 0;\r\n  width: 90%;\r\n  max-width: 800px;\r\n  margin: 5rem auto;\r\n  border-radius: 8px;\r\n  box-shadow: 0px 0px 98px -30px rgba(194, 223, 255, 1) inset;\r\n  -webkit-box-shadow: 0px 0px 98px -30px rgba(194, 223, 255, 1) inset;\r\n  -moz-box-shadow: 0px 0px 98px -30px rgba(194, 223, 255, 1) inset;\r\n\r\n  h1 {\r\n    ${GFont_Cabin_600};\r\n    margin-bottom: 1.5rem;\r\n    text-align: center;\r\n    color: #3f4d64;\r\n    i {\r\n      padding-left: 1rem;\r\n      opacity: 0.8;\r\n      transform: rotate(15deg);\r\n      transition: transform 0.4s ease;\r\n      :hover {\r\n        transform: rotate(0deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  .contact-form {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 70%;\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n\r\n    .eachInput {\r\n      display: flex;\r\n      margin: 3px 0;\r\n\r\n      label {\r\n        margin: 5px 8px;\r\n        width: 15%;\r\n        ${GFont_Cabin_600};\r\n      }\r\n\r\n      input,\r\n      textarea {\r\n        background-color: rgba(194, 223, 255, 0.6);\r\n        margin: 5px 8px;\r\n        outline: none;\r\n        width: 80%;\r\n        border: 1px solid silver;\r\n        border-radius: 5px;\r\n        padding: 8px 16px;\r\n      }\r\n\r\n      textarea {\r\n        height: 100px;\r\n        resize: none;\r\n        overflow: auto;\r\n\r\n        ::-webkit-scrollbar {\r\n          width: 8px;\r\n          margin-right: 8px;\r\n        }\r\n        ::-webkit-scrollbar-track {\r\n          background: #e1ecf4;\r\n          width: 20px;\r\n          :hover {\r\n            background-color: #e0fbfc;\r\n          }\r\n        }\r\n        ::-webkit-scrollbar-thumb {\r\n          background-color: #a6c8de;\r\n          border-radius: 20px;\r\n          border: 3px solid var(--sidebar-chatroom-bg--);\r\n          :hover {\r\n            background-color: #79adcd;\r\n          }\r\n        }\r\n      }\r\n\r\n      .ifEmpty-name {\r\n        border: ${props =>\r\n          props.nameErrorBorder ? `1px solid red` : `1px solid silver`};\r\n        transition: border 0.4s ease;\r\n      }\r\n\r\n      .ifEmpty-email {\r\n        border: ${props =>\r\n          props.emailErrorBorder ? `1px solid red` : `1px solid silver`};\r\n        transition: border 0.4s ease;\r\n      }\r\n\r\n      .ifEmpty-message {\r\n        border: ${props =>\r\n          props.messageErrorBorder ? `1px solid red` : `1px solid silver`};\r\n        transition: border 0.4s ease;\r\n      }\r\n    }\r\n\r\n    .submit-criteria {\r\n      display: flex;\r\n      flex-direction: column;\r\n      transition: all 2s ease;\r\n\r\n      .recaptcha-container {\r\n        margin: 0.5rem auto;\r\n      }\r\n\r\n      .g-recaptcha {\r\n        display: inline-block;\r\n        transition: transform 0.4s ease;\r\n      }\r\n\r\n      .send-btn {\r\n        background-color: rgba(142, 213, 205);\r\n        color: #42618a;\r\n        border: 1px solid rgba(194, 223, 255, 0.4);\r\n        border-radius: 1rem;\r\n        font-size: 1.2rem;\r\n        text-transform: uppercase;\r\n        margin: 0.5rem 1rem;\r\n        transition: all 0.4s ease;\r\n        ${props =>\r\n          props.currentLanguage === \"chi\" ? GFont_MaShanZheng : GFont_Cabin_600}\r\n\r\n        i {\r\n          margin-right: 1rem;\r\n        }\r\n\r\n        :hover {\r\n          cursor: pointer;\r\n          background-color: rgba(192, 213, 255);\r\n          color: black;\r\n          transform: scale(1.05);\r\n          transition: all 0.4s ease;\r\n        }\r\n      }\r\n\r\n      .caption {\r\n        ${GFont_Cabin_600};\r\n        font-size: 12px;\r\n        height: 12px;\r\n        color: gray;\r\n        opacity: 0.8;\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n      }\r\n\r\n      .ifEmpty-recaptcha {\r\n        color: ${props => props.captionColor};\r\n        transition: all 1s ease;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 900px) {\r\n    .contact-form {\r\n      .eachInput {\r\n        flex-direction: column;\r\n        margin: 0;\r\n        width: 100%;\r\n\r\n        label,\r\n        input,\r\n        textarea {\r\n          margin-left: 0;\r\n          margin-right: 0;\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (max-width: 700px) {\r\n    padding: 30px 0;\r\n\r\n    h1 {\r\n      text-align: left;\r\n      width: 70%;\r\n      margin: 0 auto;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 560px) {\r\n    .contact-form {\r\n      .submit-criteria {\r\n        .caption {\r\n          transition: font-size 0.4s ease;\r\n          font-size: 10px;\r\n          margin-left: 0;\r\n        }\r\n\r\n        .send-btn {\r\n          margin: inherit 0;\r\n          font-size: 1rem;\r\n          padding: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    .g-recaptcha {\r\n      transition: transform 0.4s ease;\r\n      transform: scale(0.9);\r\n      -webkit-transform: scale(0.9);\r\n      transform-origin: 0 0;\r\n      -webkit-transform-origin: 0 0;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 520px) {\r\n    .g-recaptcha {\r\n      transform: scale(0.8);\r\n      -webkit-transform: scale(0.8);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 460px) {\r\n    margin: 0 auto;\r\n    h1 {\r\n      font-size: 1.5rem;\r\n    }\r\n\r\n    .contact-form {\r\n      label,\r\n      input,\r\n      textarea {\r\n        font-size: 0.8rem;\r\n      }\r\n    }\r\n\r\n    .g-recaptcha {\r\n      transform: scale(0.7);\r\n      -webkit-transform: scale(0.7);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 410px) {\r\n    padding: 15px 0;\r\n    margin-bottom: 1rem;\r\n    .caption {\r\n      margin-bottom: 1rem;\r\n    }\r\n    .g-recaptcha {\r\n      transform: scale(0.6);\r\n      -webkit-transform: scale(0.6);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 360px) {\r\n    .contact-form {\r\n      input,\r\n      textarea {\r\n        font-size: 0.7rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Wrapper } from \"./ContactUsStyles\";\r\nimport emailjs from \"emailjs-com\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport fontContext from \"../../context/fontContext\";\r\n\r\nconst ContactUs = () => {\r\n  const { t } = useTranslation();\r\n  const { currentLanguage } = useContext(fontContext);\r\n  const [input, setInput] = useState({\r\n    from_name: \"\",\r\n    from_email: \"\",\r\n    from_message: \"\",\r\n  });\r\n\r\n  const [nameErrorBorder, setNameErrorBorder] = useState(false);\r\n  const [emailErrorBorder, setEmailErrorBorder] = useState(false);\r\n  const [messageErrorBorder, setMessageErrorBorder] = useState(false);\r\n\r\n  const [captionColor, setCaptionColor] = useState(\"\");\r\n  const [captionText, setCaptionText] = useState(\r\n    \"- - click on recaptcha before sending - -\"\r\n  );\r\n\r\n  const [recaptchaIsClicked, setRecaptchaIsClicked] = useState(false);\r\n\r\n  const handleOnChange = e => {\r\n    setInput({\r\n      ...input,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    if (e.target.value !== \"\") {\r\n      switch (e.target.name) {\r\n        case \"from_name\":\r\n          return setNameErrorBorder(false);\r\n        case \"from_email\":\r\n          return setEmailErrorBorder(false);\r\n        case \"from_message\":\r\n          return setMessageErrorBorder(false);\r\n        default:\r\n          return ``;\r\n      }\r\n    }else{\r\n      switch(e.target.name){\r\n        case \"from_name\":\r\n          return setNameErrorBorder(true);\r\n        case \"from_email\":\r\n          return setEmailErrorBorder(true);\r\n        case \"from_message\":\r\n          return setMessageErrorBorder(true);\r\n        default:\r\n          return ``;\r\n      }\r\n    }\r\n  };\r\n\r\n  const sendEmail = e => {\r\n    e.preventDefault();\r\n    if (!input.from_name || !input.from_email || !input.from_message) {\r\n      !input.from_name && setNameErrorBorder(true);\r\n      !input.from_email && setEmailErrorBorder(true);\r\n      !input.from_message && setMessageErrorBorder(true);\r\n    } else {\r\n      recaptchaIsClicked &&\r\n        setInput({\r\n          from_name: \"\",\r\n          from_email: \"\",\r\n          from_message: \"\",\r\n        });\r\n      // emailjs.sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', e.target, 'YOUR_USER_ID')\r\n      // 1 minute window on expired-or-duplicated validation\r\n      emailjs\r\n        .sendForm(\r\n          process.env.REACT_APP_EMAILJS_SERVICE_ID,\r\n          process.env.REACT_APP_EMAILJS_TEMPLATE_ID,\r\n          e.target,\r\n          process.env.REACT_APP_EMAILJS_USER_ID,\r\n          // pass in additional custom-callback,\r\n          setCaptionText(),\r\n          setCaptionColor()\r\n        )\r\n        .then(\r\n          result => {\r\n            console.log(result.text);\r\n            setCaptionColor(\"green\");\r\n            setCaptionText(\"- - submit successful - -\");\r\n          },\r\n          error => {\r\n            setCaptionColor(\"orange\");\r\n            error.text === \"timeout-or-duplicate\" &&\r\n              setCaptionText(\"wait 1 minute before resending\");\r\n            error.text === \"The g-recaptcha-response parameter not found\" &&\r\n              setCaptionText(\"- - click on recaptcha before sending - -\");\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  const recaptchaOnTick = () => {\r\n    setRecaptchaIsClicked(true);\r\n    console.info(\"Recaptcha ticked\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Wrapper\r\n        nameErrorBorder={nameErrorBorder}\r\n        emailErrorBorder={emailErrorBorder}\r\n        messageErrorBorder={messageErrorBorder}\r\n        captionColor={captionColor}\r\n        currentLanguage={currentLanguage}\r\n      >\r\n        <h1>\r\n          {t(\"contactUs.title\")}\r\n          <i className=\"fas fa-mobile-alt\" />\r\n        </h1>\r\n        <form className=\"contact-form\" onSubmit={sendEmail}>\r\n          <div className=\"eachInput\">\r\n            <input type=\"hidden\" name=\"to_name\" value=\"San\" />\r\n          </div>\r\n\r\n          <div className=\"eachInput\">\r\n            <label>{t(\"contactUs.nameLabel\")}</label>\r\n            <input\r\n              className=\"ifEmpty-name\"\r\n              placeholder={t(\"contactUs.namePlaceholder\")}\r\n              type=\"text\"\r\n              name=\"from_name\"\r\n              value={input.from_name}\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"eachInput\">\r\n            <label>{t(\"contactUs.emailLabel\")}</label>\r\n            <input\r\n              className=\"ifEmpty-email\"\r\n              placeholder={t(\"contactUs.emailPlaceholder\")}\r\n              type=\"email\"\r\n              name=\"from_email\"\r\n              value={input.from_email}\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"eachInput\">\r\n            <label>{t(\"contactUs.messageLabel\")}</label>\r\n            <textarea\r\n              className=\"ifEmpty-message\"\r\n              placeholder={t(\"contactUs.messagePlaceholder\")}\r\n              name=\"from_message\"\r\n              value={input.from_message}\r\n              onChange={handleOnChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"submit-criteria\">\r\n            <div className=\"recaptcha-container\">\r\n              {/* <div\r\n                className=\"g-recaptcha\"\r\n                // data-sitekey=\"6LcdiQYaAAAAAJM56lJqJ1KBjRkbxezFi7Pz2F-a\"\r\n                data-sitekey={process.env.REACT_APP_GOOGLE_RECAPTCHA_SITE_KEY}\r\n              /> */}\r\n              <ReCAPTCHA\r\n                className=\"g-recaptcha\"\r\n                sitekey={process.env.REACT_APP_GOOGLE_RECAPTCHA_SITE_KEY}\r\n                onChange={recaptchaOnTick}\r\n              />\r\n            </div>\r\n            <div className=\"caption ifEmpty-recaptcha\">{captionText}</div>\r\n            <Button className=\"send-btn\" type=\"submit\">\r\n              <i className=\"far fa-paper-plane\" />\r\n              {t(\"contactUs.sendButton\")}\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\nexport default ContactUs;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {GFont_Cabin_600  } from \"../../css-constants/css-constants\"\r\n\r\nconst Banner = ({ text }) => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <p>{text}</p>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n\r\nconst Wrapper = styled.div`\r\n  color: rgba(0, 0, 0, 0.9);\r\n  background-color: #e0fbfc;\r\n  ${GFont_Cabin_600};\r\n  padding: 0.9rem;\r\n  font-size: 0.9rem;\r\n  opacity: 0.7;\r\n  text-align: right;\r\n  letter-spacing: 1px;\r\n  @media (max-width: 500px) {\r\n    transition: all 0.4s ease;\r\n    text-align: center;\r\n  }\r\n  @media (max-width: 460px) {\r\n    font-size: 0.8rem;\r\n  }\r\n  @media (max-width: 400px) {\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { GFont_JetBrains_Mono_500_800 } from \"../../css-constants/css-constants\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst NotExist = () => {\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <p className=\"bg-text\">404</p>\r\n\r\n        <Container>\r\n          <p className=\"text\">Page not found!</p>\r\n          <Button\r\n            onClick={() => history.push(\"/\")}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Back to Main\r\n          </Button>\r\n        </Container>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotExist;\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: #cae5ff;\r\n  position: relative;\r\n  ${GFont_JetBrains_Mono_500_800}\r\n\r\n  .bg-text {\r\n    position: absolute;\r\n    top: 30%;\r\n    left: 50%;\r\n    transform: translate(-50%, -30%);\r\n    font-size: 14rem;\r\n    font-weight: bold;\r\n    opacity: 0.1;\r\n    letter-spacing: 2rem;\r\n\r\n    @media (max-width: 670px) {\r\n      font-size: 11rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  font-size: 5rem;\r\n  text-transform: uppercase;\r\n  position: absolute;\r\n  top: 46%;\r\n  left: 60%;\r\n  transform: translate(-60%, -46%);\r\n  text-align: center;\r\n\r\n  .text {\r\n    opacity: 0.7;\r\n  }\r\n\r\n  .MuiButton-root {\r\n    padding: 10px 20px;\r\n    font-size: 1.1rem;\r\n    transition: all 0.4s ease;\r\n    background-color: #59619b;\r\n    :hover {\r\n      transform: scale(1.04);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 950px) {\r\n    font-size: 4rem;\r\n    top: 44%;\r\n    left: 0%;\r\n    transform: translate(-0%, -44%);\r\n  }\r\n  @media (max-width: 670px) {\r\n    font-size: 3.3rem;\r\n    top: 42%;\r\n  }\r\n  @media (max-width: 360px) {\r\n    font-size: 2.7rem;\r\n  }\r\n`;\r\n","export const SET_CURRENT_LANGUAGE = \"SET_CURRENT_LANGUAGE\"","import {\r\n  SET_CURRENT_LANGUAGE\r\n} from \"./types\";\r\n\r\nconst fontReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        currentLanguage: action.payload\r\n      };\r\n    \r\n    default:\r\n      throw Error(`Auth Reducer - Unhandled Action: ${action.type}`);\r\n  }\r\n};\r\nexport default fontReducer;\r\n","import { useReducer } from \"react\";\r\nimport FontContext from \"./fontContext\";\r\nimport FontReducer from \"./fontReducer\";\r\nimport {\r\n  SET_CURRENT_LANGUAGE\r\n} from \"./types\";\r\n\r\nconst FontState = props => {\r\n  const initialState = {\r\n    currentLanguage: 'en'\r\n  };\r\n  const [state, dispatch] = useReducer(FontReducer, initialState);\r\n\r\n  const setCurrentLanguage = (lang) => {\r\n    dispatch({\r\n      type: SET_CURRENT_LANGUAGE,\r\n      payload: lang\r\n    })\r\n  }\r\n \r\n  \r\n  return (\r\n    <FontContext.Provider\r\n      value={{\r\n        currentLanguage: state.currentLanguage,\r\n        setCurrentLanguage,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FontContext.Provider>\r\n  );\r\n};\r\nexport default FontState;\r\n","import \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport ProjectList from \"./coms/ProjectList/ProjectList\";\r\nimport TechStack from \"./coms/TechStack/TechStack\";\r\nimport {\r\n  currentTechStackProps,\r\n  furtherTechStackProps,\r\n} from \"./coms/TechStack/TechStackProps\";\r\n\r\nimport LogoText from \"./coms/LogoText/LogoText\";\r\nimport HeaderLinks from \"./coms/HeaderLinks/HeaderLinks\";\r\nimport MainMessage from \"./coms/MainMessage/MainMessage\";\r\nimport CoverImage from \"./coms/CoverImage/CoverImage\";\r\nimport ContactUs from \"./coms/ContactUs/ContactUs\";\r\nimport Banner from \"./coms/Banner/Banner\";\r\nimport NotExist from \"./coms/NotExist/NotExist\";\r\n\r\nimport { useTranslation } from \"react-i18next\";\r\nimport FontState from \"./context/FontState\";\r\n\r\nconst App = () => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <>\r\n      <FontState>\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <div className=\"app\">\r\n                <div className=\"app__body\">\r\n                  <LogoText />\r\n                  <HeaderLinks />\r\n                  <MainMessage />\r\n                  <CoverImage />\r\n                  <TechStack\r\n                    title={t(\"techStack.current\")}\r\n                    techStackProps={currentTechStackProps}\r\n                  />\r\n                  <ProjectList />\r\n                  <TechStack\r\n                    title={t(\"techStack.further\")}\r\n                    techStackProps={furtherTechStackProps}\r\n                  />\r\n                  <ContactUs />\r\n                </div>\r\n              </div>\r\n              <Banner text=\"San Leow ©2020 All Rights Reserved.\" />\r\n            </Route>\r\n            <Route component={NotExist} />\r\n          </Switch>\r\n        </Router>\r\n      </FontState>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\nconst languages = ['en', 'chi']\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: 'en',\r\n    debug: false,\r\n    whitelist: languages,\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GFont_Cabin_600 } from \"../../css-constants/css-constants\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Box>\r\n          <div>L O A D I N G</div>\r\n        </Box>\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n\r\nconst Wrapper = styled.div`\r\n  height: 100vh;\r\n  background-color: #dcf0f9;\r\n  position: relative;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  width: 100%;\r\n  color: #058A85;\r\n  border-radius: 8%;\r\n  padding: 2rem 3rem;\r\n  font-size: 2rem;\r\n  ${GFont_Cabin_600};\r\n  position: absolute;\r\n  top: 15%;\r\n  left: 20%;\r\n\r\n  @media (max-width: 450px) {\r\n    font-size: 1.5rem;\r\n    left: 8%;\r\n  }\r\n`;\r\n","import React, { Suspense } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"./i18n\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Loading from \"./coms/Loading/Loading\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Suspense fallback={<Loading />}>\r\n      <App />\r\n    </Suspense>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}